// Mocks generated by Mockito 5.0.16 from annotations
// in mc_character/test/use_case/character_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mc_character/app/domain/entities/character_raw.dart' as _i2;
import 'package:mc_character/app/domain/interfaces/character_interface.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCharacterRawData_0 extends _i1.Fake implements _i2.CharacterRawData {
}

/// A class which mocks [ICharacterRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockICharacterRepo extends _i1.Mock implements _i3.ICharacterRepo {
  MockICharacterRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CharacterRawData> getCharacterData({int? offset}) => (super
          .noSuchMethod(
              Invocation.method(#getCharacterData, [], {#offset: offset}),
              returnValue:
                  Future<_i2.CharacterRawData>.value(_FakeCharacterRawData_0()))
      as _i4.Future<_i2.CharacterRawData>);
  @override
  String toString() => super.toString();
}
